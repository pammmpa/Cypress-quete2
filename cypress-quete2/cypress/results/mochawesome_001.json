{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2022-04-12T10:54:48.400Z",
    "end": "2022-04-12T10:55:33.307Z",
    "duration": 44907,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fff59e61-8c38-40ca-a2e1-e1b5c414e715",
      "title": "",
      "fullFile": "cypress/integration/quete_2_test2.spec.js",
      "file": "cypress/integration/quete_2_test2.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a36561a7-a0dd-4efc-89cc-4d6da82107c4",
          "title": "Quete2-inscription",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Inscription-non-passant",
              "fullTitle": "Quete2-inscription Inscription-non-passant",
              "timedOut": null,
              "duration": 38515,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://preprod.backmarket.fr/register');\ncy.get('#firstName').click({\n  force: true\n}).type('Nicolas');\ncy.get('#lastName').click({\n  force: true\n}).type('GENOT');\ncy.get('#signup-email').click({\n  force: true\n}).type('nicolasgenot@gmail.com');\ncy.get('#signup-password').click({\n  force: true\n}).type('');\ncy.contains('Enchant√©s').click({\n  force: true\n});",
              "err": {
                "message": "CypressError: `cy.type()` cannot accept an empty string. You need to actually type something.\n\nhttps://on.cypress.io/type",
                "estack": "CypressError: `cy.type()` cannot accept an empty string. You need to actually type something.\n\nhttps://on.cypress.io/type\n    at Context.type (https://preprod.backmarket.fr/__cypress/runner/cypress_runner.js:154724:76)\n    at Context.<anonymous> (https://preprod.backmarket.fr/__cypress/runner/cypress_runner.js:173242:19)\nFrom Your Spec Code:\n    at Context.eval (https://preprod.backmarket.fr/__cypress/tests?p=cypress\\integration\\quete_2_test2.spec.js:113:8)",
                "diff": null
              },
              "uuid": "eed7c410-8c9a-4bb8-b4dd-53dc1b934799",
              "parentUUID": "a36561a7-a0dd-4efc-89cc-4d6da82107c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "eed7c410-8c9a-4bb8-b4dd-53dc1b934799"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38515,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}